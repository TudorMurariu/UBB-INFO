plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

javafx {
    version = '17-ea+11'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.4'

    implementation 'no.tornado:tornadofx-controls:1.0.3'

    // https://mvnrepository.com/artifact/org.openjfx/javafx-controls
    implementation group: 'org.openjfx', name: 'javafx-controls', version: '17-ea+11'


    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.5.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation "de.jensd:fontawesomefx-fontawesome:4.7.0-9.1.2"

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.6.8.Final'


}

application{
    mainClass = 'MainHibernate'
}


jar {
    duplicatesStrategy (DuplicatesStrategy.EXCLUDE)

    manifest {
        attributes('Main-Class':'MainHibernate')
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}